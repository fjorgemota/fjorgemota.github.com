<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Fernando Jorge Mota</title><link href="http://fjorgemota.com/" rel="alternate"></link><link href="http://fjorgemota.com/atom/tag/php.xml" rel="self"></link><id>http://fjorgemota.com/</id><updated>2013-06-12T21:14:10-03:00</updated><entry><title>Mustache - Templates universais</title><link href="http://fjorgemota.com/artigo/mustache-templates-universais/" rel="alternate"></link><updated>2013-06-12T21:14:10-03:00</updated><author><name>Fernando Jorge Mota</name></author><id>tag:fjorgemota.com,2013-06-12:artigo/mustache-templates-universais/</id><summary type="html">&lt;p&gt;Quando você vai estruturar um novo site, é comum nos depararmos com os mais diversos &lt;em&gt;template engines&lt;/em&gt;. Muitos deles, entretanto, não tem suporte a diversas linguagens, ou quando tem possuem enormes diferenças de sintaxe. Além disso, muitos &lt;em&gt;template engines&lt;/em&gt; possuem tantos recursos que fica dificil &lt;strong&gt;não&lt;/strong&gt; separar o layout da lógica, e assim acabamos por ter dois layouts distintos que não podem usar-se das mesmas variáveis e acabam apenas por gerar muita confusão durante a manutenção de um site. Por isso, hoje vou apresentar o &lt;em&gt;&lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt;&lt;/em&gt;, um &lt;em&gt;template engine&lt;/em&gt; fácil de usar e o melhor: universal.&lt;/p&gt;
&lt;p&gt;Templates no geral devem ter alguns requisitos básicos para possuirem boa manutentabilidade:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serem fáceis de usar&lt;/li&gt;
&lt;li&gt;Ter sintaxe simples&lt;/li&gt;
&lt;li&gt;Não possuirem lógica avançada embutida, como snippets de código server-side.&lt;/li&gt;
&lt;li&gt;E, mais recentemente, serem universais (rodarem tanto no servidor quanto no browser, e terem um bom suporte à variadas linguagens)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tais requisitos muitas vezes são esquecidos em frente a &lt;em&gt;template engines&lt;/em&gt; mais populares como o &lt;a href="http://www.kuwata-lab.com/tenjin/"&gt;Tenjin&lt;/a&gt; e o &lt;a href="http://www.smarty.net/"&gt;Smarty&lt;/a&gt;, por exemplo, e graças a isso é muito fácil a manutenção se perder. Imagine, por exemplo, que o site tem um grande número de visitas e graças à isso você se vê forçado a mudar de linguagem &lt;em&gt;server-side&lt;/em&gt;? Usando tais &lt;em&gt;template engines&lt;/em&gt;, você simplesmente tem que migrar todo o template feito para o seu layout junto com o resto do site. E o pior: Graças ao suporte avançado à lógica embutida, muitas vezes as possibilidades são limitadas.&lt;/p&gt;
&lt;p&gt;O &lt;em&gt;&lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt;&lt;/em&gt; é um dos &lt;em&gt;template engines&lt;/em&gt; mais simples e mais conhecidos por cumprir &lt;strong&gt;bem&lt;/strong&gt; estes requisitos. Com um só template, você tem suporte às seguintes linguagens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/defunkt/mustache"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janl/mustache.js"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/defunkt/pystache"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mojombo/mustache.erl"&gt;Erlang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobthecow/mustache.php"&gt;PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvande/Template-Mustache"&gt;Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRMustache"&gt;Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spullara/mustache.java"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdiamond/Nustache"&gt;.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samskivert/jmustache"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrtazz/plustache"&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoisie/mustache.go/"&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nrk/hige"&gt;Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshthecoder/mustang"&gt;ooc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyakugei/mustache.as"&gt;ActionScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmcelhaney/Mustache.cfc"&gt;ColdFusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scalate/scalate"&gt;Scala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fhd/clostache"&gt;Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vspy/mustache"&gt;Fantom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvande/Milk"&gt;CoffeeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/repeatedly/mustache4d"&gt;D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;E para &lt;a href="https://github.com/raycmorgan/Mu"&gt;node.js&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa lista foi capturada diretamente do site oficial do &lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt; em 12 de junho de 2013. E mais: Você pode implementar o seu próprio parser para os templates Mustache com facilidade, visto que &lt;a href="http://mustache.github.io/mustache.5.html"&gt;todo as regras para suporte aos templates estão especificadas publicamente&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mas aí você deve estar se perguntando:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ok, e os editores com suporte para o Mustache?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bom, atualmente o &lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt; tem suporte aos seguintes editores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gist.github.com/323624"&gt;TextMate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gist.github.com/323622"&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gist.github.com/323619"&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;E &lt;a href="http://github.com/bobthecow/Mustache.mode"&gt;Coda&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Legal, né? &lt;/p&gt;
&lt;p&gt;Outra coisa &lt;strong&gt;muito legal&lt;/strong&gt; do &lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt; é que o próprio &lt;em&gt;template engine&lt;/em&gt; é definido como &lt;em&gt;logic-less&lt;/em&gt;. O que isso quer dizer? Quer dizer que o suporte à &lt;strong&gt;lógica&lt;/strong&gt; nos templates é a &lt;strong&gt;mínima possível&lt;/strong&gt;. &lt;a href="http://mustache.github.io/mustache.5.html"&gt;A prova está no manual&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Acho que, frente à essa longa lista de posts, não é necessário falar mais nenhuma vantagem do &lt;em&gt;&lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt;&lt;/em&gt;, né? E, dado o fato de que é um &lt;em&gt;template engine&lt;/em&gt; universal, acho que também não é necessário publicar nenhuma exemplo de código..Pois tais exemplos seriam &lt;strong&gt;limitados&lt;/strong&gt; demais visto a grande variedade de linguagens que o &lt;em&gt;&lt;a href="http://mustache.github.com"&gt;Mustache&lt;/a&gt;&lt;/em&gt; suporta.&lt;/p&gt;
&lt;p&gt;Enfim, esta foi a dica do dia! Deixe o seu comentário e até a próxima!&lt;/p&gt;
&lt;p&gt;PS: Ah, e desculpem-me pela falta de publicação aqui, esta semana começou meio agitada demais para eu poder fazer &lt;strong&gt;qualquer coisa&lt;/strong&gt;...&lt;/p&gt;</summary><category term="JavaScript"></category><category term="PHP"></category><category term="Ferramentas"></category><category term="Web Resouces JavaScript"></category><category term="Scripts"></category><category term="Template Engines"></category></entry></feed>