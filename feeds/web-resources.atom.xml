<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Fernando Jorge Mota</title><link href="http://fjorgemota.com/" rel="alternate"></link><link href="http://fjorgemota.com/feeds/web-resources.atom.xml" rel="self"></link><id>http://fjorgemota.com/</id><updated>2013-06-05T21:23:05-03:00</updated><entry><title>Require.JS - Carregando scripts na hora certa</title><link href="http://fjorgemota.com/artigo/requirejs-carregando-scripts-na-hora-certa/" rel="alternate"></link><updated>2013-06-05T21:23:05-03:00</updated><author><name>Fernando Jorge Mota</name></author><id>tag:fjorgemota.com,2013-06-05:artigo/requirejs-carregando-scripts-na-hora-certa/</id><summary type="html">&lt;p&gt;Quando você faz uma aplicação web, é comum carregar a página de scripts. Atualmente, isso é considerado um grave problema, ainda mais considerando que a maioria dos aplicativos web também &lt;strong&gt;devem&lt;/strong&gt; ter suporte mobile para fazerem sucesso, e considerando que usuários de aplicações móveis, e até mesmo usuários de aplicações web voltadas para desktop, geralmente não contam com uma boa conexão, pelo menos no Brasil. É focando nessas aplicações que a dica de hoje é voltada especialmente para o Require.JS, um poderoso carregador JavaScript que implementa a API &lt;abbr title="Asynchronous Module Definition"&gt;AMD&lt;/abbr&gt;.&lt;/p&gt;
&lt;p&gt;Mas antes você deve estar se perguntando.. &lt;a href="http://fjorgemota.com/artigo/o-que-e-amd-javascript/"&gt;O que é AMD? Leia a resposta neste post que preparamos para você.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Agora que você já viu as vantagens em usar a API AMD, você já tem uma visão básica de como usar o Require.JS, que implementa a API, e, cá entre nós, &lt;strong&gt;implementa muito bem&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Alguns outros detalhes sobre Require.js que você &lt;strong&gt;PRECISA&lt;/strong&gt; saber:&lt;/p&gt;
&lt;h2&gt;Definição de "módulo principal"&lt;/h2&gt;
&lt;p&gt;No Require.JS, você pode definir o módulo principal para ser carregado em uma página diretamente na chamada ao carregamento do &lt;strong&gt;Require.js&lt;/strong&gt;. Se nós tivessemos um arquivo &lt;code&gt;index.html&lt;/code&gt; cujo módulo principal fosse o &lt;code&gt;foo.js&lt;/code&gt;, implementado acima, por exemplo, poderiamos fazê-lo da seguinte forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(...)
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;(path to Require.js)/require.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-main=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
(...)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vale lembrar, entretanto, que tal chamada é totalmente &lt;strong&gt;opcional&lt;/strong&gt;, ainda mais se você quiser &lt;a href="http://requirejs.org/docs/api.html#config"&gt;&lt;strong&gt;configurar&lt;/strong&gt;&lt;/a&gt; mais profundamente o Require.JS, o que na maioria das vezes...vale a pena! ;)&lt;/p&gt;
&lt;h2&gt;Arquivos JavaScript que não suportam AMD&lt;/h2&gt;
&lt;p&gt;O Require.JS é uma biblioteca tão poderosa que é capaz de usar &lt;strong&gt;normalmente&lt;/strong&gt; arquivos JavaScripts que não usam a API AMD. Para isso, no entanto, é necessário uma configuração especial, mas ainda assim fácil de usar. &lt;a href="http://requirejs.org/docs/api.html#config-shim"&gt;Aprenda sobre ela aqui&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Pré-Otimização!&lt;/h2&gt;
&lt;p&gt;Não quer que o Require.JS carregue os vários arquivos necessários para exibir uma página no momento do carregamento da página? Ok! Você pode pré-otimizar e juntar todos os arquivos seguindo &lt;strong&gt;exatamente&lt;/strong&gt; sua ordem de dependência através de um &lt;strong&gt;otimizador muito poderoso chamado r.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ficou interessado? &lt;a href="http://requirejs.org/docs/optimization.html"&gt;Leia a documentação do r.js aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;E por enquanto é isso, pessoal! Abaixo, segue os tradicionais links para a biblioteca:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Site Oficial:&lt;/strong&gt;  &lt;a href="http://requirejs.org/"&gt;http://requirejs.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentação:&lt;/strong&gt; &lt;a href="http://requirejs.org/docs/api.html"&gt;http://requirejs.org/docs/api.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub:&lt;/strong&gt; &lt;a href="http://github.com/jrburke/requirejs"&gt;http://github.com/jrburke/requirejs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="JavaScript"></category><category term="Ferramentas"></category><category term="Web Resouces JavaScript"></category><category term="Scripts"></category></entry><entry><title>Angular.JS - Aplicativos estruturados com facilidade</title><link href="http://fjorgemota.com/artigo/angularjs-aplicativos-estruturados-com-facilidade/" rel="alternate"></link><updated>2013-06-04T19:58:28-03:00</updated><author><name>Fernando Jorge Mota</name></author><id>tag:fjorgemota.com,2013-06-04:artigo/angularjs-aplicativos-estruturados-com-facilidade/</id><summary type="html">&lt;p&gt;&lt;img src="/static/images/scripts/angularjs.png" align="right" /&gt;As vezes, no processo de criação de um aplicativo web, podemos perder um tempo precioso em coisas que podem já terem sido criadas por outro programador da comunidade opensource, na forma de biblioteca, e todo mundo sabe disso. Com o &lt;strong&gt;Angular.js&lt;/strong&gt;, biblioteca Javascript criada pelo Google, esta percepção fica ainda mais vísivel: Você percebe que, literalmente, Backbone.js e o conceito de "views" é coisa do passado, literalmente.&lt;/p&gt;
&lt;p&gt;E quando eu digo "coisa do passado", eu &lt;strong&gt;não&lt;/strong&gt; estou exagerando. &lt;strong&gt;Angular.js&lt;/strong&gt; é o tipo de biblioteca que parece meio estranha no começo, mais ou menos como &lt;strong&gt;jQuery&lt;/strong&gt;, cuja utilidade muitas vezes era questionada com perguntas como "Mas Javascript puro já faz isso", mas nesse caso envolvendo o Backbone.js.&lt;/p&gt;
&lt;p&gt;A idéia do Angular.js, pelo treinamento prévio que fiz (sou auto-ditada, aí ajuda um pouco..), é tornar transparente para o usuário questões como modelos, views e até mesmo controllers. Funciona da seguinte forma: Templates &lt;strong&gt;não&lt;/strong&gt; existem - são substituidos por blocos HTML com determinados atributos (ng-*) -, modelos também &lt;strong&gt;não&lt;/strong&gt;, no seu lugar estão objetos comuns, assim como coleções, que são ~substituidas~ por arrays. Quanto aos controllers? São funções básicas botando ordem &lt;strong&gt;EM TUDO&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;O grande diferencial (e uma das coisas que eu mais gostei, aliás) no Angular.js é que tudo tem o seu &lt;strong&gt;escopo&lt;/strong&gt;. O que quero dizer? Quero dizer que diferentes elementos de um mesmo aplicativo (imagine, por exemplo, duas tabelas distintas) possuem diferentes controladores, modelos e views, tudo salvo em um &lt;strong&gt;escopo&lt;/strong&gt; próprio ao qual o controlador, e as views.&lt;/p&gt;
&lt;p&gt;Enfim, isso é uma abstração básica do que eu entendi sobre a biblioteca. Minha opinião sobre isso tudo? &lt;strong&gt;MUITO&lt;/strong&gt; maneiro! &lt;/p&gt;
&lt;p&gt;Se você quiser saber mais, leia este post do &lt;strong&gt;&lt;a href="http://tableless.com.br/criando-uma-aplicacao-simples-com-angularjs/"&gt;Tableless&lt;/a&gt;&lt;/strong&gt;, ou aguarde mais um pouco que no futuro pode sair um post muito mais completo aqui no site especialmente dedicado ao Angular.js. ;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Site Oficial&lt;/strong&gt;: &lt;a href="http://angularjs.org"&gt;http://angularjs.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentação&lt;/strong&gt;: &lt;a href="http://docs.angularjs.org/"&gt;http://docs.angularjs.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href="http://twitter.com/angularjs"&gt;http://twitter.com/angularjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Demonstração&lt;/strong&gt;: &lt;a href="http://angularjs.org"&gt;http://angularjs.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Scripts"></category><category term="JavaScript"></category><category term="Ferramentas"></category><category term="Web Resouces JavaScript"></category><category term="HTML5"></category></entry><entry><title>QTip2 - Poderosos Tooltips com jQuery</title><link href="http://fjorgemota.com/artigo/qtip2-poderosos-tooltips-com-jquery/" rel="alternate"></link><updated>2013-06-03T21:30:11-03:00</updated><author><name>Fernando Jorge Mota</name></author><id>tag:fjorgemota.com,2013-06-03:artigo/qtip2-poderosos-tooltips-com-jquery/</id><summary type="html">&lt;p&gt;&lt;img src="/static/images/scripts/qtip2.png" alt="QTip2 - Logotipo" align="right"/&gt;Vez ou outra surge a necessidade de apontarmos para o usuário exatamente um local, ou permitir uma descrição maior sobre um determinado elemento de uma página. Para isso, foram criados os tooltips, pequenos balões que aparecem durante a interação (clique, mouseover..etc) com elementos da tela. &lt;/p&gt;
&lt;p&gt;Numa página web, este procedimento geralmente é feito com HTML, CSS e Javascript. O &lt;a href="http://twitter.github.com/bootstrap"&gt;Twitter Bootstrap&lt;/a&gt;, por exemplo, implementa isso nativamente, embora não tenha lá muitos recursos para a área.&lt;/p&gt;
&lt;p&gt;É para suprir tal necessidade que surgiu a &lt;strong&gt;&lt;a href="http://craigsworks.com/projects/qtip2"&gt;QTip2&lt;/a&gt;&lt;/strong&gt;, uma biblioteca poderosa, disponibilizada como plugin para o &lt;strong&gt;jQuery&lt;/strong&gt;, que é fácil de usar e gratuita e que, além de tooltips, pode criar &lt;em&gt;overlays&lt;/em&gt;, disponibilizar mensagens (em um esquema similar ao jGrowl, que será apresentado em breve) e exibir caixas de alerta, confirmação e prompt de forma inline (usando overlays).&lt;/p&gt;
&lt;p&gt;Veja o site oficial, a documentação e os exemplos para conhecer mais sobre a biblioteca, e bons códigos! :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Site Oficial&lt;/strong&gt;: &lt;a href="http://craigsworks.com/projects/qtip2"&gt;http://craigsworks.com/projects/qtip2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentação&lt;/strong&gt;: &lt;a href="http://craigsworks.com/projects/qtip2/docs/"&gt;http://craigsworks.com/projects/qtip2/docs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Demonstrações&lt;/strong&gt;: &lt;a href="http://craigsworks.com/projects/qtip2/demos/"&gt;http://craigsworks.com/projects/qtip2/demos/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href="https://github.com/craga89/qtip2"&gt;https://github.com/craga89/qtip2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Scripts"></category><category term="JavaScript"></category><category term="Ferramentas"></category><category term="Web Resouces JavaScript"></category><category term="Web Resources jQuery"></category></entry></feed>